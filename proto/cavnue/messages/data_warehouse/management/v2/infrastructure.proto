syntax = "proto3";

package cavnue.messages.data_warehouse.management.v2;

import "cavnue/third_party/bq/v1/bq_field.proto";
import "cavnue/third_party/bq/v1/bq_table.proto";
import "cavnue/messages/common/v1/common.proto";

import "cavnue/messages/common/v1/field_options.proto";

// Top level organization
message Organization {
  option (gen_bq_schema.bigquery_opts).table_name = "Organizations";

  // The organization id
  optional int64 organization_id = 1 [
    (gen_bq_schema.bigquery) = { require: true },
    (common.v1.primary_key) = true
  ];
  optional string identifier = 2 [(gen_bq_schema.bigquery) = { require: true }];
  // Colloquial organization name
  optional string display_name = 3
      [(gen_bq_schema.bigquery) = { require: true }];
  optional bool active = 4 [(gen_bq_schema.bigquery) = { require: true }];
}

// GCP Folder
message Deployment {
  option (gen_bq_schema.bigquery_opts).table_name = "Deployments";

  // The GCP folder id
  optional int64 deployment_id = 1 [
    (gen_bq_schema.bigquery) = { require: true },
    (common.v1.primary_key) = true
  ];
  optional string identifier = 2 [(gen_bq_schema.bigquery) = { require: true }];
  optional int64 organization_id = 3
      [(gen_bq_schema.bigquery) = { require: true }];
  // Colloquial deployment name
  optional string display_name = 4
      [(gen_bq_schema.bigquery) = { require: true }];
  optional bool active = 5 [(gen_bq_schema.bigquery) = { require: true }];
}

// An index of all GCP environemnts within GCP deployments
message Environment {
  option (gen_bq_schema.bigquery_opts).table_name = "Environments";

  // The GCP project id
  optional int64 environment_id = 1 [
    (gen_bq_schema.bigquery) = { require: true },
    (common.v1.primary_key) = true
  ];
  // The GCP folder id
  optional int64 deployment_id = 2
      [(gen_bq_schema.bigquery) = { require: true }];
  optional string identifier = 3 [(gen_bq_schema.bigquery) = { require: true }];
  // Colloquial environment name
  optional string display_name = 4
      [(gen_bq_schema.bigquery) = { require: true }];
  optional bool active = 5 [(gen_bq_schema.bigquery) = { require: true }];
}

// An index of all Cohorts within GCP projects
message Cohort {
  option (gen_bq_schema.bigquery_opts).table_name = "Cohorts";

  // Autogenerated. A unique ID representing the cohort
  optional int64 cohort_id = 1 [
    (gen_bq_schema.bigquery) = { require: true },
    (common.v1.autogenerated) = true,
    (common.v1.derivation) = "organization_id",
    (common.v1.derivation) = "deployment_id",
    (common.v1.derivation) = "environment_id",
    (common.v1.derivation) = "identifier",
    (common.v1.primary_key) = true
  ];
  optional int64 organization_id = 2
      [(gen_bq_schema.bigquery) = { require: true }];
  optional int64 deployment_id = 3
      [(gen_bq_schema.bigquery) = { require: true }];
  optional int64 environment_id = 4
      [(gen_bq_schema.bigquery) = { require: true }];
  optional string identifier = 5 [(gen_bq_schema.bigquery) = { require: true }];
  // Colloquial cohort name
  optional string display_name = 6
      [(gen_bq_schema.bigquery) = { require: true }];
  optional bool active = 7 [(gen_bq_schema.bigquery) = { require: true }];
}