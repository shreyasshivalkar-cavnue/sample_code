syntax = "proto3";

package cavnue.messages.data_warehouse.management.v1;

import "cavnue/third_party/bq/v1/bq_field.proto";
import "cavnue/third_party/bq/v1/bq_table.proto";
import "cavnue/messages/common/v1/common.proto";

import "cavnue/messages/common/v1/field_options.proto";

// An index of all GCP folders
message Folder {
  option (gen_bq_schema.bigquery_opts).table_name = "Folders";

  // The GCP folder id
  optional int64 folder_id = 1 [
    (gen_bq_schema.bigquery) = { require: true },
    (common.v1.primary_key) = true
  ];
  optional string identifier = 2 [(gen_bq_schema.bigquery) = { require: true }];
}

// An index of all GCP project within GCP folders
message Project {
  option (gen_bq_schema.bigquery_opts).table_name = "Projects";

  // The GCP project id
  optional int64 project_id = 1 [
    (gen_bq_schema.bigquery) = { require: true },
    (common.v1.primary_key) = true
  ];
  // The GCP folder id
  optional int64 folder_id = 2 [(gen_bq_schema.bigquery) = { require: true }];
  optional string identifier = 3 [(gen_bq_schema.bigquery) = { require: true }];
  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_PROD = 1;
    TYPE_STAGING = 2;
    TYPE_DEV = 3;
    TYPE_REPLAY = 4;
  }
  // The environment type
  optional Type type = 4 [(gen_bq_schema.bigquery) = {
    require: true,
  }];
}

// An index of all Cohorts within GCP projects
message Cohort {
  option (gen_bq_schema.bigquery_opts).table_name = "Cohorts";

  // Autogenerated. A unique ID representing the cohort
  optional int64 cohort_id = 1 [
    (gen_bq_schema.bigquery) = { require: true },
    (common.v1.autogenerated) = true,
    (common.v1.derivation) = "project_id",
    (common.v1.derivation) = "identifier",
    (common.v1.primary_key) = true
  ];
  optional int64 project_id = 2 [(gen_bq_schema.bigquery) = { require: true }];
  optional string identifier = 3 [(gen_bq_schema.bigquery) = { require: true }];
  // The deployment that the cohort belongs to.
  optional common.v1.DataSource.Deployment deployment = 4
      [(gen_bq_schema.bigquery) = {
        require: true,
      }];
}