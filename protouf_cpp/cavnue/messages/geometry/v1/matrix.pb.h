// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cavnue/messages/geometry/v1/matrix.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cavnue/messages/common/v1/field_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
namespace cavnue {
namespace messages {
namespace geometry {
namespace v1 {
class Matrix22d;
struct Matrix22dDefaultTypeInternal;
extern Matrix22dDefaultTypeInternal _Matrix22d_default_instance_;
class Matrix22f;
struct Matrix22fDefaultTypeInternal;
extern Matrix22fDefaultTypeInternal _Matrix22f_default_instance_;
class Matrix33d;
struct Matrix33dDefaultTypeInternal;
extern Matrix33dDefaultTypeInternal _Matrix33d_default_instance_;
class Matrix33f;
struct Matrix33fDefaultTypeInternal;
extern Matrix33fDefaultTypeInternal _Matrix33f_default_instance_;
class Matrix34d;
struct Matrix34dDefaultTypeInternal;
extern Matrix34dDefaultTypeInternal _Matrix34d_default_instance_;
class Matrix34f;
struct Matrix34fDefaultTypeInternal;
extern Matrix34fDefaultTypeInternal _Matrix34f_default_instance_;
class Matrix44d;
struct Matrix44dDefaultTypeInternal;
extern Matrix44dDefaultTypeInternal _Matrix44d_default_instance_;
class Matrix44f;
struct Matrix44fDefaultTypeInternal;
extern Matrix44fDefaultTypeInternal _Matrix44f_default_instance_;
class Matrixd;
struct MatrixdDefaultTypeInternal;
extern MatrixdDefaultTypeInternal _Matrixd_default_instance_;
class Matrixf;
struct MatrixfDefaultTypeInternal;
extern MatrixfDefaultTypeInternal _Matrixf_default_instance_;
}  // namespace v1
}  // namespace geometry
}  // namespace messages
}  // namespace cavnue
PROTOBUF_NAMESPACE_OPEN
template <>
::cavnue::messages::geometry::v1::Matrix22d* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrix22d>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrix22f* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrix22f>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrix33d* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrix33d>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrix33f* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrix33f>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrix34d* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrix34d>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrix34f* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrix34f>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrix44d* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrix44d>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrix44f* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrix44f>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrixd* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrixd>(Arena*);
template <>
::cavnue::messages::geometry::v1::Matrixf* Arena::CreateMaybeMessage<::cavnue::messages::geometry::v1::Matrixf>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace cavnue {
namespace messages {
namespace geometry {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Matrix22f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrix22f) */ {
 public:
  inline Matrix22f() : Matrix22f(nullptr) {}
  ~Matrix22f() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix22f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrix22f(const Matrix22f& from);
  Matrix22f(Matrix22f&& from) noexcept
    : Matrix22f() {
    *this = ::std::move(from);
  }

  inline Matrix22f& operator=(const Matrix22f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix22f& operator=(Matrix22f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrix22f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix22f* internal_default_instance() {
    return reinterpret_cast<const Matrix22f*>(
               &_Matrix22f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Matrix22f& a, Matrix22f& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix22f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix22f* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix22f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix22f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrix22f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrix22f& from) {
    Matrix22f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrix22f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrix22f";
  }
  protected:
  explicit Matrix22f(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // repeated float m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 2, (.cavnue.messages.common.v1.cols) = 2];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  float m(int index) const;
  void set_m(int index, float value);
  void add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* mutable_m();

  private:
  float _internal_m(int index) const;
  void _internal_add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* _internal_mutable_m();

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrix22f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<float> m_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrix22d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrix22d) */ {
 public:
  inline Matrix22d() : Matrix22d(nullptr) {}
  ~Matrix22d() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix22d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrix22d(const Matrix22d& from);
  Matrix22d(Matrix22d&& from) noexcept
    : Matrix22d() {
    *this = ::std::move(from);
  }

  inline Matrix22d& operator=(const Matrix22d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix22d& operator=(Matrix22d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrix22d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix22d* internal_default_instance() {
    return reinterpret_cast<const Matrix22d*>(
               &_Matrix22d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Matrix22d& a, Matrix22d& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix22d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix22d* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix22d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix22d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrix22d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrix22d& from) {
    Matrix22d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrix22d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrix22d";
  }
  protected:
  explicit Matrix22d(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // repeated double m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 2, (.cavnue.messages.common.v1.cols) = 2];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  double m(int index) const;
  void set_m(int index, double value);
  void add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* mutable_m();

  private:
  double _internal_m(int index) const;
  void _internal_add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* _internal_mutable_m();

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrix22d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<double> m_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrix33f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrix33f) */ {
 public:
  inline Matrix33f() : Matrix33f(nullptr) {}
  ~Matrix33f() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix33f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrix33f(const Matrix33f& from);
  Matrix33f(Matrix33f&& from) noexcept
    : Matrix33f() {
    *this = ::std::move(from);
  }

  inline Matrix33f& operator=(const Matrix33f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix33f& operator=(Matrix33f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrix33f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix33f* internal_default_instance() {
    return reinterpret_cast<const Matrix33f*>(
               &_Matrix33f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Matrix33f& a, Matrix33f& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix33f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix33f* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix33f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix33f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrix33f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrix33f& from) {
    Matrix33f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrix33f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrix33f";
  }
  protected:
  explicit Matrix33f(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // repeated float m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 3, (.cavnue.messages.common.v1.cols) = 3];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  float m(int index) const;
  void set_m(int index, float value);
  void add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* mutable_m();

  private:
  float _internal_m(int index) const;
  void _internal_add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* _internal_mutable_m();

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrix33f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<float> m_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrix33d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrix33d) */ {
 public:
  inline Matrix33d() : Matrix33d(nullptr) {}
  ~Matrix33d() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix33d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrix33d(const Matrix33d& from);
  Matrix33d(Matrix33d&& from) noexcept
    : Matrix33d() {
    *this = ::std::move(from);
  }

  inline Matrix33d& operator=(const Matrix33d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix33d& operator=(Matrix33d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrix33d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix33d* internal_default_instance() {
    return reinterpret_cast<const Matrix33d*>(
               &_Matrix33d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Matrix33d& a, Matrix33d& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix33d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix33d* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix33d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix33d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrix33d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrix33d& from) {
    Matrix33d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrix33d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrix33d";
  }
  protected:
  explicit Matrix33d(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // repeated double m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 3, (.cavnue.messages.common.v1.cols) = 3];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  double m(int index) const;
  void set_m(int index, double value);
  void add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* mutable_m();

  private:
  double _internal_m(int index) const;
  void _internal_add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* _internal_mutable_m();

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrix33d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<double> m_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrix34f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrix34f) */ {
 public:
  inline Matrix34f() : Matrix34f(nullptr) {}
  ~Matrix34f() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix34f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrix34f(const Matrix34f& from);
  Matrix34f(Matrix34f&& from) noexcept
    : Matrix34f() {
    *this = ::std::move(from);
  }

  inline Matrix34f& operator=(const Matrix34f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix34f& operator=(Matrix34f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrix34f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix34f* internal_default_instance() {
    return reinterpret_cast<const Matrix34f*>(
               &_Matrix34f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Matrix34f& a, Matrix34f& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix34f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix34f* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix34f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix34f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrix34f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrix34f& from) {
    Matrix34f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrix34f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrix34f";
  }
  protected:
  explicit Matrix34f(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // repeated float m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 3, (.cavnue.messages.common.v1.cols) = 4];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  float m(int index) const;
  void set_m(int index, float value);
  void add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* mutable_m();

  private:
  float _internal_m(int index) const;
  void _internal_add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* _internal_mutable_m();

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrix34f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<float> m_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrix34d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrix34d) */ {
 public:
  inline Matrix34d() : Matrix34d(nullptr) {}
  ~Matrix34d() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix34d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrix34d(const Matrix34d& from);
  Matrix34d(Matrix34d&& from) noexcept
    : Matrix34d() {
    *this = ::std::move(from);
  }

  inline Matrix34d& operator=(const Matrix34d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix34d& operator=(Matrix34d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrix34d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix34d* internal_default_instance() {
    return reinterpret_cast<const Matrix34d*>(
               &_Matrix34d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Matrix34d& a, Matrix34d& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix34d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix34d* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix34d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix34d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrix34d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrix34d& from) {
    Matrix34d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrix34d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrix34d";
  }
  protected:
  explicit Matrix34d(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // repeated double m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 3, (.cavnue.messages.common.v1.cols) = 4];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  double m(int index) const;
  void set_m(int index, double value);
  void add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* mutable_m();

  private:
  double _internal_m(int index) const;
  void _internal_add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* _internal_mutable_m();

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrix34d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<double> m_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrix44f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrix44f) */ {
 public:
  inline Matrix44f() : Matrix44f(nullptr) {}
  ~Matrix44f() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix44f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrix44f(const Matrix44f& from);
  Matrix44f(Matrix44f&& from) noexcept
    : Matrix44f() {
    *this = ::std::move(from);
  }

  inline Matrix44f& operator=(const Matrix44f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix44f& operator=(Matrix44f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrix44f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix44f* internal_default_instance() {
    return reinterpret_cast<const Matrix44f*>(
               &_Matrix44f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Matrix44f& a, Matrix44f& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix44f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix44f* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix44f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix44f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrix44f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrix44f& from) {
    Matrix44f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrix44f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrix44f";
  }
  protected:
  explicit Matrix44f(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // repeated float m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 4, (.cavnue.messages.common.v1.cols) = 4];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  float m(int index) const;
  void set_m(int index, float value);
  void add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* mutable_m();

  private:
  float _internal_m(int index) const;
  void _internal_add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* _internal_mutable_m();

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrix44f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<float> m_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrix44d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrix44d) */ {
 public:
  inline Matrix44d() : Matrix44d(nullptr) {}
  ~Matrix44d() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrix44d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrix44d(const Matrix44d& from);
  Matrix44d(Matrix44d&& from) noexcept
    : Matrix44d() {
    *this = ::std::move(from);
  }

  inline Matrix44d& operator=(const Matrix44d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrix44d& operator=(Matrix44d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrix44d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrix44d* internal_default_instance() {
    return reinterpret_cast<const Matrix44d*>(
               &_Matrix44d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Matrix44d& a, Matrix44d& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrix44d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrix44d* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrix44d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrix44d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrix44d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrix44d& from) {
    Matrix44d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrix44d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrix44d";
  }
  protected:
  explicit Matrix44d(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 1,
  };
  // repeated double m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 4, (.cavnue.messages.common.v1.cols) = 4];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  double m(int index) const;
  void set_m(int index, double value);
  void add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* mutable_m();

  private:
  double _internal_m(int index) const;
  void _internal_add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* _internal_mutable_m();

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrix44d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<double> m_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrixf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrixf) */ {
 public:
  inline Matrixf() : Matrixf(nullptr) {}
  ~Matrixf() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrixf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrixf(const Matrixf& from);
  Matrixf(Matrixf&& from) noexcept
    : Matrixf() {
    *this = ::std::move(from);
  }

  inline Matrixf& operator=(const Matrixf& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrixf& operator=(Matrixf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrixf& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrixf* internal_default_instance() {
    return reinterpret_cast<const Matrixf*>(
               &_Matrixf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Matrixf& a, Matrixf& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrixf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrixf* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrixf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrixf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrixf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrixf& from) {
    Matrixf::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrixf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrixf";
  }
  protected:
  explicit Matrixf(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 3,
    kRowsFieldNumber = 1,
    kColsFieldNumber = 2,
  };
  // repeated float m = 3 [json_name = "m", packed = true];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  float m(int index) const;
  void set_m(int index, float value);
  void add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* mutable_m();

  private:
  float _internal_m(int index) const;
  void _internal_add_m(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* _internal_mutable_m();

  public:
  // uint32 rows = 1 [json_name = "rows"];
  void clear_rows() ;
  ::uint32_t rows() const;
  void set_rows(::uint32_t value);

  private:
  ::uint32_t _internal_rows() const;
  void _internal_set_rows(::uint32_t value);

  public:
  // uint32 cols = 2 [json_name = "cols"];
  void clear_cols() ;
  ::uint32_t cols() const;
  void set_cols(::uint32_t value);

  private:
  ::uint32_t _internal_cols() const;
  void _internal_set_cols(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrixf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<float> m_;
    ::uint32_t rows_;
    ::uint32_t cols_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};// -------------------------------------------------------------------

class Matrixd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cavnue.messages.geometry.v1.Matrixd) */ {
 public:
  inline Matrixd() : Matrixd(nullptr) {}
  ~Matrixd() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Matrixd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Matrixd(const Matrixd& from);
  Matrixd(Matrixd&& from) noexcept
    : Matrixd() {
    *this = ::std::move(from);
  }

  inline Matrixd& operator=(const Matrixd& from) {
    CopyFrom(from);
    return *this;
  }
  inline Matrixd& operator=(Matrixd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Matrixd& default_instance() {
    return *internal_default_instance();
  }
  static inline const Matrixd* internal_default_instance() {
    return reinterpret_cast<const Matrixd*>(
               &_Matrixd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Matrixd& a, Matrixd& b) {
    a.Swap(&b);
  }
  inline void Swap(Matrixd* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Matrixd* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Matrixd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Matrixd>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Matrixd& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Matrixd& from) {
    Matrixd::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Matrixd* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "cavnue.messages.geometry.v1.Matrixd";
  }
  protected:
  explicit Matrixd(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMFieldNumber = 3,
    kRowsFieldNumber = 1,
    kColsFieldNumber = 2,
  };
  // repeated double m = 3 [json_name = "m", packed = true];
  int m_size() const;
  private:
  int _internal_m_size() const;

  public:
  void clear_m() ;
  double m(int index) const;
  void set_m(int index, double value);
  void add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* mutable_m();

  private:
  double _internal_m(int index) const;
  void _internal_add_m(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& _internal_m() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* _internal_mutable_m();

  public:
  // uint32 rows = 1 [json_name = "rows"];
  void clear_rows() ;
  ::uint32_t rows() const;
  void set_rows(::uint32_t value);

  private:
  ::uint32_t _internal_rows() const;
  void _internal_set_rows(::uint32_t value);

  public:
  // uint32 cols = 2 [json_name = "cols"];
  void clear_cols() ;
  ::uint32_t cols() const;
  void set_cols(::uint32_t value);

  private:
  ::uint32_t _internal_cols() const;
  void _internal_set_cols(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cavnue.messages.geometry.v1.Matrixd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<double> m_;
    ::uint32_t rows_;
    ::uint32_t cols_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Matrix22f

// repeated float m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 2, (.cavnue.messages.common.v1.cols) = 2];
inline int Matrix22f::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrix22f::m_size() const {
  return _internal_m_size();
}
inline void Matrix22f::clear_m() {
  _internal_mutable_m()->Clear();
}
inline float Matrix22f::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrix22f.m)
  return _internal_m(index);
}
inline void Matrix22f::set_m(int index, float value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrix22f.m)
}
inline void Matrix22f::add_m(float value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrix22f.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrix22f::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrix22f.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrix22f::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrix22f.m)
  return _internal_mutable_m();
}

inline float Matrix22f::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrix22f::_internal_add_m(float value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrix22f::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrix22f::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrix22d

// repeated double m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 2, (.cavnue.messages.common.v1.cols) = 2];
inline int Matrix22d::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrix22d::m_size() const {
  return _internal_m_size();
}
inline void Matrix22d::clear_m() {
  _internal_mutable_m()->Clear();
}
inline double Matrix22d::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrix22d.m)
  return _internal_m(index);
}
inline void Matrix22d::set_m(int index, double value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrix22d.m)
}
inline void Matrix22d::add_m(double value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrix22d.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrix22d::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrix22d.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrix22d::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrix22d.m)
  return _internal_mutable_m();
}

inline double Matrix22d::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrix22d::_internal_add_m(double value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrix22d::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrix22d::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrix33f

// repeated float m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 3, (.cavnue.messages.common.v1.cols) = 3];
inline int Matrix33f::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrix33f::m_size() const {
  return _internal_m_size();
}
inline void Matrix33f::clear_m() {
  _internal_mutable_m()->Clear();
}
inline float Matrix33f::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrix33f.m)
  return _internal_m(index);
}
inline void Matrix33f::set_m(int index, float value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrix33f.m)
}
inline void Matrix33f::add_m(float value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrix33f.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrix33f::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrix33f.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrix33f::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrix33f.m)
  return _internal_mutable_m();
}

inline float Matrix33f::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrix33f::_internal_add_m(float value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrix33f::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrix33f::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrix33d

// repeated double m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 3, (.cavnue.messages.common.v1.cols) = 3];
inline int Matrix33d::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrix33d::m_size() const {
  return _internal_m_size();
}
inline void Matrix33d::clear_m() {
  _internal_mutable_m()->Clear();
}
inline double Matrix33d::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrix33d.m)
  return _internal_m(index);
}
inline void Matrix33d::set_m(int index, double value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrix33d.m)
}
inline void Matrix33d::add_m(double value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrix33d.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrix33d::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrix33d.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrix33d::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrix33d.m)
  return _internal_mutable_m();
}

inline double Matrix33d::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrix33d::_internal_add_m(double value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrix33d::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrix33d::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrix34f

// repeated float m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 3, (.cavnue.messages.common.v1.cols) = 4];
inline int Matrix34f::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrix34f::m_size() const {
  return _internal_m_size();
}
inline void Matrix34f::clear_m() {
  _internal_mutable_m()->Clear();
}
inline float Matrix34f::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrix34f.m)
  return _internal_m(index);
}
inline void Matrix34f::set_m(int index, float value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrix34f.m)
}
inline void Matrix34f::add_m(float value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrix34f.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrix34f::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrix34f.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrix34f::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrix34f.m)
  return _internal_mutable_m();
}

inline float Matrix34f::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrix34f::_internal_add_m(float value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrix34f::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrix34f::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrix34d

// repeated double m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 3, (.cavnue.messages.common.v1.cols) = 4];
inline int Matrix34d::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrix34d::m_size() const {
  return _internal_m_size();
}
inline void Matrix34d::clear_m() {
  _internal_mutable_m()->Clear();
}
inline double Matrix34d::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrix34d.m)
  return _internal_m(index);
}
inline void Matrix34d::set_m(int index, double value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrix34d.m)
}
inline void Matrix34d::add_m(double value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrix34d.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrix34d::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrix34d.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrix34d::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrix34d.m)
  return _internal_mutable_m();
}

inline double Matrix34d::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrix34d::_internal_add_m(double value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrix34d::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrix34d::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrix44f

// repeated float m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 4, (.cavnue.messages.common.v1.cols) = 4];
inline int Matrix44f::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrix44f::m_size() const {
  return _internal_m_size();
}
inline void Matrix44f::clear_m() {
  _internal_mutable_m()->Clear();
}
inline float Matrix44f::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrix44f.m)
  return _internal_m(index);
}
inline void Matrix44f::set_m(int index, float value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrix44f.m)
}
inline void Matrix44f::add_m(float value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrix44f.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrix44f::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrix44f.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrix44f::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrix44f.m)
  return _internal_mutable_m();
}

inline float Matrix44f::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrix44f::_internal_add_m(float value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrix44f::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrix44f::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrix44d

// repeated double m = 1 [json_name = "m", packed = true, (.cavnue.messages.common.v1.rows) = 4, (.cavnue.messages.common.v1.cols) = 4];
inline int Matrix44d::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrix44d::m_size() const {
  return _internal_m_size();
}
inline void Matrix44d::clear_m() {
  _internal_mutable_m()->Clear();
}
inline double Matrix44d::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrix44d.m)
  return _internal_m(index);
}
inline void Matrix44d::set_m(int index, double value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrix44d.m)
}
inline void Matrix44d::add_m(double value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrix44d.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrix44d::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrix44d.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrix44d::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrix44d.m)
  return _internal_mutable_m();
}

inline double Matrix44d::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrix44d::_internal_add_m(double value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrix44d::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrix44d::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrixf

// uint32 rows = 1 [json_name = "rows"];
inline void Matrixf::clear_rows() {
  _impl_.rows_ = 0u;
}
inline ::uint32_t Matrixf::rows() const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrixf.rows)
  return _internal_rows();
}
inline void Matrixf::set_rows(::uint32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrixf.rows)
}
inline ::uint32_t Matrixf::_internal_rows() const {
  return _impl_.rows_;
}
inline void Matrixf::_internal_set_rows(::uint32_t value) {
  ;
  _impl_.rows_ = value;
}

// uint32 cols = 2 [json_name = "cols"];
inline void Matrixf::clear_cols() {
  _impl_.cols_ = 0u;
}
inline ::uint32_t Matrixf::cols() const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrixf.cols)
  return _internal_cols();
}
inline void Matrixf::set_cols(::uint32_t value) {
  _internal_set_cols(value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrixf.cols)
}
inline ::uint32_t Matrixf::_internal_cols() const {
  return _impl_.cols_;
}
inline void Matrixf::_internal_set_cols(::uint32_t value) {
  ;
  _impl_.cols_ = value;
}

// repeated float m = 3 [json_name = "m", packed = true];
inline int Matrixf::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrixf::m_size() const {
  return _internal_m_size();
}
inline void Matrixf::clear_m() {
  _internal_mutable_m()->Clear();
}
inline float Matrixf::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrixf.m)
  return _internal_m(index);
}
inline void Matrixf::set_m(int index, float value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrixf.m)
}
inline void Matrixf::add_m(float value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrixf.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrixf::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrixf.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrixf::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrixf.m)
  return _internal_mutable_m();
}

inline float Matrixf::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrixf::_internal_add_m(float value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>& Matrixf::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<float>* Matrixf::_internal_mutable_m() {
  return &_impl_.m_;
}

// -------------------------------------------------------------------

// Matrixd

// uint32 rows = 1 [json_name = "rows"];
inline void Matrixd::clear_rows() {
  _impl_.rows_ = 0u;
}
inline ::uint32_t Matrixd::rows() const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrixd.rows)
  return _internal_rows();
}
inline void Matrixd::set_rows(::uint32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrixd.rows)
}
inline ::uint32_t Matrixd::_internal_rows() const {
  return _impl_.rows_;
}
inline void Matrixd::_internal_set_rows(::uint32_t value) {
  ;
  _impl_.rows_ = value;
}

// uint32 cols = 2 [json_name = "cols"];
inline void Matrixd::clear_cols() {
  _impl_.cols_ = 0u;
}
inline ::uint32_t Matrixd::cols() const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrixd.cols)
  return _internal_cols();
}
inline void Matrixd::set_cols(::uint32_t value) {
  _internal_set_cols(value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrixd.cols)
}
inline ::uint32_t Matrixd::_internal_cols() const {
  return _impl_.cols_;
}
inline void Matrixd::_internal_set_cols(::uint32_t value) {
  ;
  _impl_.cols_ = value;
}

// repeated double m = 3 [json_name = "m", packed = true];
inline int Matrixd::_internal_m_size() const {
  return _impl_.m_.size();
}
inline int Matrixd::m_size() const {
  return _internal_m_size();
}
inline void Matrixd::clear_m() {
  _internal_mutable_m()->Clear();
}
inline double Matrixd::m(int index) const {
  // @@protoc_insertion_point(field_get:cavnue.messages.geometry.v1.Matrixd.m)
  return _internal_m(index);
}
inline void Matrixd::set_m(int index, double value) {
  _internal_mutable_m()->Set(index, value);
  // @@protoc_insertion_point(field_set:cavnue.messages.geometry.v1.Matrixd.m)
}
inline void Matrixd::add_m(double value) {
  _internal_add_m(value);
  // @@protoc_insertion_point(field_add:cavnue.messages.geometry.v1.Matrixd.m)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrixd::m() const {
  // @@protoc_insertion_point(field_list:cavnue.messages.geometry.v1.Matrixd.m)
  return _internal_m();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrixd::mutable_m() {
  // @@protoc_insertion_point(field_mutable_list:cavnue.messages.geometry.v1.Matrixd.m)
  return _internal_mutable_m();
}

inline double Matrixd::_internal_m(int index) const {
  return _internal_m().Get(index);
}
inline void Matrixd::_internal_add_m(double value) {
  _internal_mutable_m()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>& Matrixd::_internal_m() const {
  return _impl_.m_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>* Matrixd::_internal_mutable_m() {
  return &_impl_.m_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace geometry
}  // namespace messages
}  // namespace cavnue


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_cavnue_2fmessages_2fgeometry_2fv1_2fmatrix_2eproto_2epb_2eh
