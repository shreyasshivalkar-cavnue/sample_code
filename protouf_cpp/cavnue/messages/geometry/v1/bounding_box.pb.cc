// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cavnue/messages/geometry/v1/bounding_box.proto

#include "cavnue/messages/geometry/v1/bounding_box.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace cavnue {
namespace messages {
namespace geometry {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR BoundingBox2f::BoundingBox2f(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.center_)*/nullptr
  , /*decltype(_impl_.extents_)*/nullptr} {}
struct BoundingBox2fDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoundingBox2fDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoundingBox2fDefaultTypeInternal() {}
  union {
    BoundingBox2f _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoundingBox2fDefaultTypeInternal _BoundingBox2f_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR BoundingBox3f::BoundingBox3f(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.center_)*/nullptr
  , /*decltype(_impl_.extents_)*/nullptr} {}
struct BoundingBox3fDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoundingBox3fDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoundingBox3fDefaultTypeInternal() {}
  union {
    BoundingBox3f _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoundingBox3fDefaultTypeInternal _BoundingBox3f_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RotatedBoundingBox3f::RotatedBoundingBox3f(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.center_)*/nullptr
  , /*decltype(_impl_.center_rotation_)*/nullptr
  , /*decltype(_impl_.extents_)*/nullptr} {}
struct RotatedBoundingBox3fDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotatedBoundingBox3fDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotatedBoundingBox3fDefaultTypeInternal() {}
  union {
    RotatedBoundingBox3f _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotatedBoundingBox3fDefaultTypeInternal _RotatedBoundingBox3f_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RotatedBoundingBox3d::RotatedBoundingBox3d(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.center_)*/nullptr
  , /*decltype(_impl_.center_rotation_)*/nullptr
  , /*decltype(_impl_.extents_)*/nullptr} {}
struct RotatedBoundingBox3dDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotatedBoundingBox3dDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotatedBoundingBox3dDefaultTypeInternal() {}
  union {
    RotatedBoundingBox3d _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotatedBoundingBox3dDefaultTypeInternal _RotatedBoundingBox3d_default_instance_;
}  // namespace v1
}  // namespace geometry
}  // namespace messages
}  // namespace cavnue
static ::_pb::Metadata file_level_metadata_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto = nullptr;
const ::uint32_t TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::BoundingBox2f, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::BoundingBox2f, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::BoundingBox2f, _impl_.center_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::BoundingBox2f, _impl_.extents_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::BoundingBox3f, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::BoundingBox3f, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::BoundingBox3f, _impl_.center_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::BoundingBox3f, _impl_.extents_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3f, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3f, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3f, _impl_.center_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3f, _impl_.center_rotation_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3f, _impl_.extents_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3d, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3d, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3d, _impl_.center_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3d, _impl_.center_rotation_),
    PROTOBUF_FIELD_OFFSET(::cavnue::messages::geometry::v1::RotatedBoundingBox3d, _impl_.extents_),
    0,
    1,
    2,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, 10, -1, sizeof(::cavnue::messages::geometry::v1::BoundingBox2f)},
        { 12, 22, -1, sizeof(::cavnue::messages::geometry::v1::BoundingBox3f)},
        { 24, 35, -1, sizeof(::cavnue::messages::geometry::v1::RotatedBoundingBox3f)},
        { 38, 49, -1, sizeof(::cavnue::messages::geometry::v1::RotatedBoundingBox3d)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cavnue::messages::geometry::v1::_BoundingBox2f_default_instance_._instance,
    &::cavnue::messages::geometry::v1::_BoundingBox3f_default_instance_._instance,
    &::cavnue::messages::geometry::v1::_RotatedBoundingBox3f_default_instance_._instance,
    &::cavnue::messages::geometry::v1::_RotatedBoundingBox3d_default_instance_._instance,
};
const char descriptor_table_protodef_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n.cavnue/messages/geometry/v1/bounding_b"
    "ox.proto\022\033cavnue.messages.geometry.v1\032(c"
    "avnue/messages/geometry/v1/vector.proto\""
    "\217\001\n\rBoundingBox2f\022=\n\006center\030\001 \001(\0132%.cavn"
    "ue.messages.geometry.v1.Vector2fR\006center"
    "\022\?\n\007extents\030\002 \001(\0132%.cavnue.messages.geom"
    "etry.v1.Vector2fR\007extents\"\217\001\n\rBoundingBo"
    "x3f\022=\n\006center\030\001 \001(\0132%.cavnue.messages.ge"
    "ometry.v1.Vector3fR\006center\022\?\n\007extents\030\002 "
    "\001(\0132%.cavnue.messages.geometry.v1.Vector"
    "3fR\007extents\"\346\001\n\024RotatedBoundingBox3f\022=\n\006"
    "center\030\001 \001(\0132%.cavnue.messages.geometry."
    "v1.Vector3fR\006center\022N\n\017center_rotation\030\002"
    " \001(\0132%.cavnue.messages.geometry.v1.Vecto"
    "r4fR\016centerRotation\022\?\n\007extents\030\003 \001(\0132%.c"
    "avnue.messages.geometry.v1.Vector3fR\007ext"
    "ents\"\346\001\n\024RotatedBoundingBox3d\022=\n\006center\030"
    "\001 \001(\0132%.cavnue.messages.geometry.v1.Vect"
    "or3dR\006center\022N\n\017center_rotation\030\002 \001(\0132%."
    "cavnue.messages.geometry.v1.Vector4fR\016ce"
    "nterRotation\022\?\n\007extents\030\003 \001(\0132%.cavnue.m"
    "essages.geometry.v1.Vector3fR\007extentsb\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_deps[1] =
    {
        &::descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fvector_2eproto,
};
static ::absl::once_flag descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto = {
    false,
    false,
    885,
    descriptor_table_protodef_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto,
    "cavnue/messages/geometry/v1/bounding_box.proto",
    &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_once,
    descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto::offsets,
    file_level_metadata_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto,
    file_level_enum_descriptors_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto,
    file_level_service_descriptors_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_getter() {
  return &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto(&descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto);
namespace cavnue {
namespace messages {
namespace geometry {
namespace v1 {
// ===================================================================

class BoundingBox2f::_Internal {
 public:
  using HasBits = decltype(std::declval<BoundingBox2f>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BoundingBox2f, _impl_._has_bits_);
  static const ::cavnue::messages::geometry::v1::Vector2f& center(const BoundingBox2f* msg);
  static void set_has_center(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cavnue::messages::geometry::v1::Vector2f& extents(const BoundingBox2f* msg);
  static void set_has_extents(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::cavnue::messages::geometry::v1::Vector2f&
BoundingBox2f::_Internal::center(const BoundingBox2f* msg) {
  return *msg->_impl_.center_;
}
const ::cavnue::messages::geometry::v1::Vector2f&
BoundingBox2f::_Internal::extents(const BoundingBox2f* msg) {
  return *msg->_impl_.extents_;
}
void BoundingBox2f::clear_center() {
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BoundingBox2f::clear_extents() {
  if (_impl_.extents_ != nullptr) _impl_.extents_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
BoundingBox2f::BoundingBox2f(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cavnue.messages.geometry.v1.BoundingBox2f)
}
BoundingBox2f::BoundingBox2f(const BoundingBox2f& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BoundingBox2f* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.center_){nullptr}
    , decltype(_impl_.extents_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.center_ = new ::cavnue::messages::geometry::v1::Vector2f(*from._impl_.center_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.extents_ = new ::cavnue::messages::geometry::v1::Vector2f(*from._impl_.extents_);
  }
  // @@protoc_insertion_point(copy_constructor:cavnue.messages.geometry.v1.BoundingBox2f)
}

inline void BoundingBox2f::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.center_){nullptr}
    , decltype(_impl_.extents_){nullptr}
  };
}

BoundingBox2f::~BoundingBox2f() {
  // @@protoc_insertion_point(destructor:cavnue.messages.geometry.v1.BoundingBox2f)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BoundingBox2f::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.center_;
  if (this != internal_default_instance()) delete _impl_.extents_;
}

void BoundingBox2f::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BoundingBox2f::Clear() {
// @@protoc_insertion_point(message_clear_start:cavnue.messages.geometry.v1.BoundingBox2f)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.center_ != nullptr);
      _impl_.center_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.extents_ != nullptr);
      _impl_.extents_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BoundingBox2f::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cavnue.messages.geometry.v1.Vector2f center = 1 [json_name = "center"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_center(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cavnue.messages.geometry.v1.Vector2f extents = 2 [json_name = "extents"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_extents(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BoundingBox2f::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cavnue.messages.geometry.v1.BoundingBox2f)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cavnue.messages.geometry.v1.Vector2f center = 1 [json_name = "center"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::center(this),
        _Internal::center(this).GetCachedSize(), target, stream);
  }

  // .cavnue.messages.geometry.v1.Vector2f extents = 2 [json_name = "extents"];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::extents(this),
        _Internal::extents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cavnue.messages.geometry.v1.BoundingBox2f)
  return target;
}

::size_t BoundingBox2f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cavnue.messages.geometry.v1.BoundingBox2f)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .cavnue.messages.geometry.v1.Vector2f center = 1 [json_name = "center"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.center_);
    }

    // .cavnue.messages.geometry.v1.Vector2f extents = 2 [json_name = "extents"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.extents_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BoundingBox2f::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BoundingBox2f::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BoundingBox2f::GetClassData() const { return &_class_data_; }


void BoundingBox2f::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BoundingBox2f*>(&to_msg);
  auto& from = static_cast<const BoundingBox2f&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cavnue.messages.geometry.v1.BoundingBox2f)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_center()->::cavnue::messages::geometry::v1::Vector2f::MergeFrom(
          from._internal_center());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_extents()->::cavnue::messages::geometry::v1::Vector2f::MergeFrom(
          from._internal_extents());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BoundingBox2f::CopyFrom(const BoundingBox2f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cavnue.messages.geometry.v1.BoundingBox2f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundingBox2f::IsInitialized() const {
  return true;
}

void BoundingBox2f::InternalSwap(BoundingBox2f* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BoundingBox2f, _impl_.extents_)
      + sizeof(BoundingBox2f::_impl_.extents_)
      - PROTOBUF_FIELD_OFFSET(BoundingBox2f, _impl_.center_)>(
          reinterpret_cast<char*>(&_impl_.center_),
          reinterpret_cast<char*>(&other->_impl_.center_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BoundingBox2f::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_getter, &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_once,
      file_level_metadata_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto[0]);
}
// ===================================================================

class BoundingBox3f::_Internal {
 public:
  using HasBits = decltype(std::declval<BoundingBox3f>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BoundingBox3f, _impl_._has_bits_);
  static const ::cavnue::messages::geometry::v1::Vector3f& center(const BoundingBox3f* msg);
  static void set_has_center(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cavnue::messages::geometry::v1::Vector3f& extents(const BoundingBox3f* msg);
  static void set_has_extents(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::cavnue::messages::geometry::v1::Vector3f&
BoundingBox3f::_Internal::center(const BoundingBox3f* msg) {
  return *msg->_impl_.center_;
}
const ::cavnue::messages::geometry::v1::Vector3f&
BoundingBox3f::_Internal::extents(const BoundingBox3f* msg) {
  return *msg->_impl_.extents_;
}
void BoundingBox3f::clear_center() {
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BoundingBox3f::clear_extents() {
  if (_impl_.extents_ != nullptr) _impl_.extents_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
BoundingBox3f::BoundingBox3f(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cavnue.messages.geometry.v1.BoundingBox3f)
}
BoundingBox3f::BoundingBox3f(const BoundingBox3f& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BoundingBox3f* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.center_){nullptr}
    , decltype(_impl_.extents_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.center_ = new ::cavnue::messages::geometry::v1::Vector3f(*from._impl_.center_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.extents_ = new ::cavnue::messages::geometry::v1::Vector3f(*from._impl_.extents_);
  }
  // @@protoc_insertion_point(copy_constructor:cavnue.messages.geometry.v1.BoundingBox3f)
}

inline void BoundingBox3f::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.center_){nullptr}
    , decltype(_impl_.extents_){nullptr}
  };
}

BoundingBox3f::~BoundingBox3f() {
  // @@protoc_insertion_point(destructor:cavnue.messages.geometry.v1.BoundingBox3f)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BoundingBox3f::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.center_;
  if (this != internal_default_instance()) delete _impl_.extents_;
}

void BoundingBox3f::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BoundingBox3f::Clear() {
// @@protoc_insertion_point(message_clear_start:cavnue.messages.geometry.v1.BoundingBox3f)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.center_ != nullptr);
      _impl_.center_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.extents_ != nullptr);
      _impl_.extents_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BoundingBox3f::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cavnue.messages.geometry.v1.Vector3f center = 1 [json_name = "center"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_center(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cavnue.messages.geometry.v1.Vector3f extents = 2 [json_name = "extents"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_extents(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BoundingBox3f::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cavnue.messages.geometry.v1.BoundingBox3f)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cavnue.messages.geometry.v1.Vector3f center = 1 [json_name = "center"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::center(this),
        _Internal::center(this).GetCachedSize(), target, stream);
  }

  // .cavnue.messages.geometry.v1.Vector3f extents = 2 [json_name = "extents"];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::extents(this),
        _Internal::extents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cavnue.messages.geometry.v1.BoundingBox3f)
  return target;
}

::size_t BoundingBox3f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cavnue.messages.geometry.v1.BoundingBox3f)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .cavnue.messages.geometry.v1.Vector3f center = 1 [json_name = "center"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.center_);
    }

    // .cavnue.messages.geometry.v1.Vector3f extents = 2 [json_name = "extents"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.extents_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BoundingBox3f::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BoundingBox3f::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BoundingBox3f::GetClassData() const { return &_class_data_; }


void BoundingBox3f::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BoundingBox3f*>(&to_msg);
  auto& from = static_cast<const BoundingBox3f&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cavnue.messages.geometry.v1.BoundingBox3f)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_center()->::cavnue::messages::geometry::v1::Vector3f::MergeFrom(
          from._internal_center());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_extents()->::cavnue::messages::geometry::v1::Vector3f::MergeFrom(
          from._internal_extents());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BoundingBox3f::CopyFrom(const BoundingBox3f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cavnue.messages.geometry.v1.BoundingBox3f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundingBox3f::IsInitialized() const {
  return true;
}

void BoundingBox3f::InternalSwap(BoundingBox3f* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BoundingBox3f, _impl_.extents_)
      + sizeof(BoundingBox3f::_impl_.extents_)
      - PROTOBUF_FIELD_OFFSET(BoundingBox3f, _impl_.center_)>(
          reinterpret_cast<char*>(&_impl_.center_),
          reinterpret_cast<char*>(&other->_impl_.center_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BoundingBox3f::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_getter, &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_once,
      file_level_metadata_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto[1]);
}
// ===================================================================

class RotatedBoundingBox3f::_Internal {
 public:
  using HasBits = decltype(std::declval<RotatedBoundingBox3f>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RotatedBoundingBox3f, _impl_._has_bits_);
  static const ::cavnue::messages::geometry::v1::Vector3f& center(const RotatedBoundingBox3f* msg);
  static void set_has_center(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cavnue::messages::geometry::v1::Vector4f& center_rotation(const RotatedBoundingBox3f* msg);
  static void set_has_center_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::cavnue::messages::geometry::v1::Vector3f& extents(const RotatedBoundingBox3f* msg);
  static void set_has_extents(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::cavnue::messages::geometry::v1::Vector3f&
RotatedBoundingBox3f::_Internal::center(const RotatedBoundingBox3f* msg) {
  return *msg->_impl_.center_;
}
const ::cavnue::messages::geometry::v1::Vector4f&
RotatedBoundingBox3f::_Internal::center_rotation(const RotatedBoundingBox3f* msg) {
  return *msg->_impl_.center_rotation_;
}
const ::cavnue::messages::geometry::v1::Vector3f&
RotatedBoundingBox3f::_Internal::extents(const RotatedBoundingBox3f* msg) {
  return *msg->_impl_.extents_;
}
void RotatedBoundingBox3f::clear_center() {
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RotatedBoundingBox3f::clear_center_rotation() {
  if (_impl_.center_rotation_ != nullptr) _impl_.center_rotation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void RotatedBoundingBox3f::clear_extents() {
  if (_impl_.extents_ != nullptr) _impl_.extents_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
RotatedBoundingBox3f::RotatedBoundingBox3f(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
}
RotatedBoundingBox3f::RotatedBoundingBox3f(const RotatedBoundingBox3f& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RotatedBoundingBox3f* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.center_){nullptr}
    , decltype(_impl_.center_rotation_){nullptr}
    , decltype(_impl_.extents_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.center_ = new ::cavnue::messages::geometry::v1::Vector3f(*from._impl_.center_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.center_rotation_ = new ::cavnue::messages::geometry::v1::Vector4f(*from._impl_.center_rotation_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.extents_ = new ::cavnue::messages::geometry::v1::Vector3f(*from._impl_.extents_);
  }
  // @@protoc_insertion_point(copy_constructor:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
}

inline void RotatedBoundingBox3f::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.center_){nullptr}
    , decltype(_impl_.center_rotation_){nullptr}
    , decltype(_impl_.extents_){nullptr}
  };
}

RotatedBoundingBox3f::~RotatedBoundingBox3f() {
  // @@protoc_insertion_point(destructor:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RotatedBoundingBox3f::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.center_;
  if (this != internal_default_instance()) delete _impl_.center_rotation_;
  if (this != internal_default_instance()) delete _impl_.extents_;
}

void RotatedBoundingBox3f::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RotatedBoundingBox3f::Clear() {
// @@protoc_insertion_point(message_clear_start:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.center_ != nullptr);
      _impl_.center_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.center_rotation_ != nullptr);
      _impl_.center_rotation_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.extents_ != nullptr);
      _impl_.extents_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RotatedBoundingBox3f::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cavnue.messages.geometry.v1.Vector3f center = 1 [json_name = "center"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_center(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cavnue.messages.geometry.v1.Vector4f center_rotation = 2 [json_name = "centerRotation"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_center_rotation(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cavnue.messages.geometry.v1.Vector3f extents = 3 [json_name = "extents"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extents(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* RotatedBoundingBox3f::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cavnue.messages.geometry.v1.Vector3f center = 1 [json_name = "center"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::center(this),
        _Internal::center(this).GetCachedSize(), target, stream);
  }

  // .cavnue.messages.geometry.v1.Vector4f center_rotation = 2 [json_name = "centerRotation"];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::center_rotation(this),
        _Internal::center_rotation(this).GetCachedSize(), target, stream);
  }

  // .cavnue.messages.geometry.v1.Vector3f extents = 3 [json_name = "extents"];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::extents(this),
        _Internal::extents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
  return target;
}

::size_t RotatedBoundingBox3f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .cavnue.messages.geometry.v1.Vector3f center = 1 [json_name = "center"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.center_);
    }

    // .cavnue.messages.geometry.v1.Vector4f center_rotation = 2 [json_name = "centerRotation"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.center_rotation_);
    }

    // .cavnue.messages.geometry.v1.Vector3f extents = 3 [json_name = "extents"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.extents_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RotatedBoundingBox3f::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RotatedBoundingBox3f::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RotatedBoundingBox3f::GetClassData() const { return &_class_data_; }


void RotatedBoundingBox3f::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RotatedBoundingBox3f*>(&to_msg);
  auto& from = static_cast<const RotatedBoundingBox3f&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_center()->::cavnue::messages::geometry::v1::Vector3f::MergeFrom(
          from._internal_center());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_center_rotation()->::cavnue::messages::geometry::v1::Vector4f::MergeFrom(
          from._internal_center_rotation());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_extents()->::cavnue::messages::geometry::v1::Vector3f::MergeFrom(
          from._internal_extents());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RotatedBoundingBox3f::CopyFrom(const RotatedBoundingBox3f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cavnue.messages.geometry.v1.RotatedBoundingBox3f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RotatedBoundingBox3f::IsInitialized() const {
  return true;
}

void RotatedBoundingBox3f::InternalSwap(RotatedBoundingBox3f* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotatedBoundingBox3f, _impl_.extents_)
      + sizeof(RotatedBoundingBox3f::_impl_.extents_)
      - PROTOBUF_FIELD_OFFSET(RotatedBoundingBox3f, _impl_.center_)>(
          reinterpret_cast<char*>(&_impl_.center_),
          reinterpret_cast<char*>(&other->_impl_.center_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RotatedBoundingBox3f::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_getter, &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_once,
      file_level_metadata_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto[2]);
}
// ===================================================================

class RotatedBoundingBox3d::_Internal {
 public:
  using HasBits = decltype(std::declval<RotatedBoundingBox3d>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RotatedBoundingBox3d, _impl_._has_bits_);
  static const ::cavnue::messages::geometry::v1::Vector3d& center(const RotatedBoundingBox3d* msg);
  static void set_has_center(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cavnue::messages::geometry::v1::Vector4f& center_rotation(const RotatedBoundingBox3d* msg);
  static void set_has_center_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::cavnue::messages::geometry::v1::Vector3f& extents(const RotatedBoundingBox3d* msg);
  static void set_has_extents(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::cavnue::messages::geometry::v1::Vector3d&
RotatedBoundingBox3d::_Internal::center(const RotatedBoundingBox3d* msg) {
  return *msg->_impl_.center_;
}
const ::cavnue::messages::geometry::v1::Vector4f&
RotatedBoundingBox3d::_Internal::center_rotation(const RotatedBoundingBox3d* msg) {
  return *msg->_impl_.center_rotation_;
}
const ::cavnue::messages::geometry::v1::Vector3f&
RotatedBoundingBox3d::_Internal::extents(const RotatedBoundingBox3d* msg) {
  return *msg->_impl_.extents_;
}
void RotatedBoundingBox3d::clear_center() {
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RotatedBoundingBox3d::clear_center_rotation() {
  if (_impl_.center_rotation_ != nullptr) _impl_.center_rotation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void RotatedBoundingBox3d::clear_extents() {
  if (_impl_.extents_ != nullptr) _impl_.extents_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
RotatedBoundingBox3d::RotatedBoundingBox3d(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
}
RotatedBoundingBox3d::RotatedBoundingBox3d(const RotatedBoundingBox3d& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RotatedBoundingBox3d* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.center_){nullptr}
    , decltype(_impl_.center_rotation_){nullptr}
    , decltype(_impl_.extents_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.center_ = new ::cavnue::messages::geometry::v1::Vector3d(*from._impl_.center_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.center_rotation_ = new ::cavnue::messages::geometry::v1::Vector4f(*from._impl_.center_rotation_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.extents_ = new ::cavnue::messages::geometry::v1::Vector3f(*from._impl_.extents_);
  }
  // @@protoc_insertion_point(copy_constructor:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
}

inline void RotatedBoundingBox3d::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.center_){nullptr}
    , decltype(_impl_.center_rotation_){nullptr}
    , decltype(_impl_.extents_){nullptr}
  };
}

RotatedBoundingBox3d::~RotatedBoundingBox3d() {
  // @@protoc_insertion_point(destructor:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RotatedBoundingBox3d::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.center_;
  if (this != internal_default_instance()) delete _impl_.center_rotation_;
  if (this != internal_default_instance()) delete _impl_.extents_;
}

void RotatedBoundingBox3d::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RotatedBoundingBox3d::Clear() {
// @@protoc_insertion_point(message_clear_start:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.center_ != nullptr);
      _impl_.center_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.center_rotation_ != nullptr);
      _impl_.center_rotation_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.extents_ != nullptr);
      _impl_.extents_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RotatedBoundingBox3d::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cavnue.messages.geometry.v1.Vector3d center = 1 [json_name = "center"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_center(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cavnue.messages.geometry.v1.Vector4f center_rotation = 2 [json_name = "centerRotation"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_center_rotation(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .cavnue.messages.geometry.v1.Vector3f extents = 3 [json_name = "extents"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extents(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* RotatedBoundingBox3d::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cavnue.messages.geometry.v1.Vector3d center = 1 [json_name = "center"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::center(this),
        _Internal::center(this).GetCachedSize(), target, stream);
  }

  // .cavnue.messages.geometry.v1.Vector4f center_rotation = 2 [json_name = "centerRotation"];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::center_rotation(this),
        _Internal::center_rotation(this).GetCachedSize(), target, stream);
  }

  // .cavnue.messages.geometry.v1.Vector3f extents = 3 [json_name = "extents"];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::extents(this),
        _Internal::extents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
  return target;
}

::size_t RotatedBoundingBox3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .cavnue.messages.geometry.v1.Vector3d center = 1 [json_name = "center"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.center_);
    }

    // .cavnue.messages.geometry.v1.Vector4f center_rotation = 2 [json_name = "centerRotation"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.center_rotation_);
    }

    // .cavnue.messages.geometry.v1.Vector3f extents = 3 [json_name = "extents"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.extents_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RotatedBoundingBox3d::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RotatedBoundingBox3d::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RotatedBoundingBox3d::GetClassData() const { return &_class_data_; }


void RotatedBoundingBox3d::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RotatedBoundingBox3d*>(&to_msg);
  auto& from = static_cast<const RotatedBoundingBox3d&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_center()->::cavnue::messages::geometry::v1::Vector3d::MergeFrom(
          from._internal_center());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_center_rotation()->::cavnue::messages::geometry::v1::Vector4f::MergeFrom(
          from._internal_center_rotation());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_extents()->::cavnue::messages::geometry::v1::Vector3f::MergeFrom(
          from._internal_extents());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RotatedBoundingBox3d::CopyFrom(const RotatedBoundingBox3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cavnue.messages.geometry.v1.RotatedBoundingBox3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RotatedBoundingBox3d::IsInitialized() const {
  return true;
}

void RotatedBoundingBox3d::InternalSwap(RotatedBoundingBox3d* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotatedBoundingBox3d, _impl_.extents_)
      + sizeof(RotatedBoundingBox3d::_impl_.extents_)
      - PROTOBUF_FIELD_OFFSET(RotatedBoundingBox3d, _impl_.center_)>(
          reinterpret_cast<char*>(&_impl_.center_),
          reinterpret_cast<char*>(&other->_impl_.center_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RotatedBoundingBox3d::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_getter, &descriptor_table_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto_once,
      file_level_metadata_cavnue_2fmessages_2fgeometry_2fv1_2fbounding_5fbox_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace geometry
}  // namespace messages
}  // namespace cavnue
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cavnue::messages::geometry::v1::BoundingBox2f*
Arena::CreateMaybeMessage< ::cavnue::messages::geometry::v1::BoundingBox2f >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cavnue::messages::geometry::v1::BoundingBox2f >(arena);
}
template<> PROTOBUF_NOINLINE ::cavnue::messages::geometry::v1::BoundingBox3f*
Arena::CreateMaybeMessage< ::cavnue::messages::geometry::v1::BoundingBox3f >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cavnue::messages::geometry::v1::BoundingBox3f >(arena);
}
template<> PROTOBUF_NOINLINE ::cavnue::messages::geometry::v1::RotatedBoundingBox3f*
Arena::CreateMaybeMessage< ::cavnue::messages::geometry::v1::RotatedBoundingBox3f >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cavnue::messages::geometry::v1::RotatedBoundingBox3f >(arena);
}
template<> PROTOBUF_NOINLINE ::cavnue::messages::geometry::v1::RotatedBoundingBox3d*
Arena::CreateMaybeMessage< ::cavnue::messages::geometry::v1::RotatedBoundingBox3d >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cavnue::messages::geometry::v1::RotatedBoundingBox3d >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
